/*
решение задач с сайта http://cppstudio.com/cat/285/288/
*/

#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <cassert>
#include "../include/help.h"
#include "../include/normal.h"
#include <cmath>
#include <ctime>
#include <clocale>
#include <Windows.h>

using namespace std;
#define DEBUG 1


int runNormal () {
    string titleFile = "normal.cpp";
    // SetConsoleCP(1251);
    // SetConsoleOutputCP(1251);
    unsigned int startTime = clock();
    if (DEBUG) {
        writeLog(titleFile);
    } 
    // перехватываем mode из main.cpp
    string *inputDelete = new string();
    getline(std::cin, *inputDelete);
    delete inputDelete;
    // ==================== start ==========================

    // Задача 1: В текстовом файле, содержащем текст программы на языке Си, проверить соответствие открывающихся и закрывающихся фигурных скобок { и }. 
    // Результат проверки вывести на экран и записать в виде фразы в текстовый файл. 
    // Результат работы программы (вывод) поместить в отдельный текстовый файл (например, "out . txt " ), продублировав на экране.



    // Задача 2: Используя показатели функции вычислить цепную дробь. Количество елементов дроби надо задавать с клавиатуры.


    // Задача 3: Нужно вычислить произведение матрицы на вектор. В полученном векторе найти макисмальный  элемент. необходимо решить данную задачу тремя способами:

            // 1. с использованием статических массивов
            // 2. использовать только динамические массивы с явным разыменованием указателя
            // 3. использовать только динамические массивы, адресацию к элементам массива выполнять с помощью индексов.
            // То есть, у вас должно получиться три отдельных исходника — три программы.


    // Задача 4: Задача на динамическое выделение памяти. Изначально есть указатель на массив с одним элементом. 
    // Пользователь вводит число. Если оно больше 0 записываем его в массив. 
    // Далее пользователь вводит второе число, тут уже,  если оно больше 0, надо пере выделять память для 2-х элементов массива и записать в массив второе число. 
    // И так далее…  для 3-х элементов, для 4-х…  пока пользователь не введет отрицательное число. 


    // Задача 5: Необходимо создать структуру, которая содержит элемент типа int и строку. 
    // Объявить указатель типа структуры (объект структуры) и выделить память для хранения данных одной структуры. 
    // Предложить пользователю внести данные и записать их в элементы объекта структуры. 
    // Далее пользователю необходимо сделать выбор: внести еще данные (создать еще один объект структуры) либо выйти из программы. 
    // Если пользователь продолжает ввод — необходимо выделить новую память для указателя на объект структуры и дописать в нее введенные пользователем новые данные. 
    // Цикл выделения новой памяти продолжается, пока пользователь не выберет выход из программы.



    // ==================== end ============================
    unsigned int endTime = clock();
    unsigned int resultTime = endTime - startTime;
    timeTime(resultTime);
    system("pause");
    return 0;
}
